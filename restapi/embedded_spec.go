// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Return the time of day. Timezone optional.",
    "title": "timeofday",
    "contact": {
      "name": "Elf Sternberg",
      "url": "https://github.com/elfsternberg/go-timeofday",
      "email": "elf.sternberg@gmail.com"
    },
    "license": {
      "name": "apache-2.0"
    },
    "version": "0.1.0"
  },
  "basePath": "/timeofday/v1",
  "paths": {
    "/time": {
      "get": {
        "description": "Returns time of day.",
        "operationId": "ClockGet",
        "parameters": [
          {
            "type": "string",
            "description": "Timezone to return",
            "name": "timezone",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the time of day.",
            "schema": {
              "$ref": "#/definitions/timeofday"
            }
          },
          "404": {
            "description": "Time zone not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Something has gone horribly wrong",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Returns time of day.",
        "operationId": "ClockPost",
        "parameters": [
          {
            "description": "Timezone to return",
            "name": "timezone",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/timezone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the time of day.",
            "schema": {
              "$ref": "#/definitions/timeofday"
            }
          },
          "404": {
            "description": "Time zone not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Something has gone horribly wrong",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "timeofday": {
      "type": "object",
      "properties": {
        "timeofday": {
          "type": "string"
        }
      }
    },
    "timezone": {
      "type": "object",
      "required": [
        "timezone"
      ],
      "properties": {
        "timezone": {
          "type": "string",
          "default": "UTC",
          "minLength": 3
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Return the time of day. Timezone optional.",
    "title": "timeofday",
    "contact": {
      "name": "Elf Sternberg",
      "url": "https://github.com/elfsternberg/go-timeofday",
      "email": "elf.sternberg@gmail.com"
    },
    "license": {
      "name": "apache-2.0"
    },
    "version": "0.1.0"
  },
  "basePath": "/timeofday/v1",
  "paths": {
    "/time": {
      "get": {
        "description": "Returns time of day.",
        "operationId": "ClockGet",
        "parameters": [
          {
            "type": "string",
            "description": "Timezone to return",
            "name": "timezone",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the time of day.",
            "schema": {
              "$ref": "#/definitions/timeofday"
            }
          },
          "404": {
            "description": "Time zone not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Something has gone horribly wrong",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "description": "Returns time of day.",
        "operationId": "ClockPost",
        "parameters": [
          {
            "description": "Timezone to return",
            "name": "timezone",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/timezone"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the time of day.",
            "schema": {
              "$ref": "#/definitions/timeofday"
            }
          },
          "404": {
            "description": "Time zone not found",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Something has gone horribly wrong",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "errorResponse": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "timeofday": {
      "type": "object",
      "properties": {
        "timeofday": {
          "type": "string"
        }
      }
    },
    "timezone": {
      "type": "object",
      "required": [
        "timezone"
      ],
      "properties": {
        "timezone": {
          "type": "string",
          "default": "UTC",
          "minLength": 3
        }
      }
    }
  }
}`))
}
